/* globals.scss */
@use "sass:map";

/* --------------------------------------------------
   Tailwind Base Import
   -------------------------------------------------- */
@import "tailwindcss";

/* --------------------------------------------------
   Breakpoints
   -------------------------------------------------- */
$breakpoints: (
  sm: 48em,
  md: 64em,
  lg: 82.667em,
  xl: 100em
);

/* --------------------------------------------------
   Color Palette
   -------------------------------------------------- */
$colors: (
  primary: (
  50: hsl(223, 100%, 70%),
  100: hsl(223, 100%, 50%),
  200: hsl(223, 100%, 35%),
  300: hsl(223, 100%, 29%),
  400: hsl(223, 100%, 20%),
  500: hsl(223, 100%, 13%)
),
  neutral: (
    50: hsl(0, 0%, 96%),
    100: hsl(0, 0%, 79%),
    200: hsl(0, 0%, 59%),
    300: hsl(0, 0%, 40%),
    400: hsl(0, 0%, 22%),
    500: hsl(0, 0%, 7%)
  ),
  success: (
    100: hsl(150, 100%, 39%)
  ),
  warning: (
    100: hsl(59, 94%, 71%)
  ),
  error: (
    100: hsl(347, 100%, 50%)
  )
);

/* --------------------------------------------------
   Typography Scale
   -------------------------------------------------- */
$typo-scale: (
    small: (
        100: 0.625rem,   // 7.5px
        200: 0.875rem,   // 10.5px
        300: 1rem,       // 12px
        400: 1.125rem,   // 13.5px
        500: 1.5rem,     // 18px
        600: 1.875rem,   // 22.5px
        700: 2.25rem,    // 27px
        800: 3rem,        // 36px
        900: 4rem,        // 36px
        1000: 5rem,       // 48px
        1100: 6rem       // 48px
    ),
    medium: (
        100: 0.75rem,    // 9px
        200: 1rem,       // 12px
        300: 1.125rem,   // 13.5px
        400: 1.25rem,    // 15px
        500: 1.75rem,    // 21px
        600: 2.25rem,    // 27px
        700: 3rem,       // 36px
        800: 4rem,       // 48px
        900: 5rem,        // 48px
        1000: 6rem,       // 48px
        1100: 7rem       // 48px
    ),
    large: (
        100: 0.875rem,   // 10.5px
        200: 1.125rem,   // 13px
        300: 1.25rem,    // 15px
        400: 1.5rem,     // 18px
        500: 2rem,       // 24px
        600: 3rem,       // 36px
        700: 4.5rem,     // 54px
        800: 6rem,        // 72px
        900: 7rem,        // 72px
        1000: 8rem,        // 72px
        1100: 9rem        // 72px
    )
);

@each $break, $breakpoint in $breakpoints {
  @if $break == md {
    @media (min-width: #{$breakpoint}) {
      :root {
        @each $size, $val in map.get($typo-scale, medium) {
          --fs-#{$size}: #{$val};
        }
      }
    }
  }
  @if $break == lg or $break == xl {
    @media (min-width: #{$breakpoint}) {
      :root {
        @each $size, $val in map.get($typo-scale, large) {
          --fs-#{$size}: #{$val};
        }
      }
    }
  }
}

/* --------------------------------------------------
   CSS Variables on :root
   -------------------------------------------------- */
:root {
  /* Colors */
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      --clr-#{$color}-#{$shade}: #{$value};
    }
  }

  /* Typography (small screens default) */
  @each $screen, $sizes in $typo-scale {
    @each $size, $val in $sizes {
      --fs-#{$size}: #{$val};
    }
  }
}

/* --------------------------------------------------
   Font-Face Mixin
   -------------------------------------------------- */
@mixin font-face($name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: "#{$name}";
    src: url("/fonts/#{$path}.ttf") format("truetype");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

/* --------------------------------------------------
   Glow Mixin
   -------------------------------------------------- */
@mixin cyberpunk-glow(
  $glow-color: #ffffff,
  $blur: 15px,
  $spread: 5px,
  $animated: true
) {
  box-shadow: 0 0 $spread $blur $glow-color;

  @if $animated {
    animation: cyberpunk-pulse-#{$blur}-#{$spread} 1.5s infinite alternate;

    @keyframes cyberpunk-pulse-#{$blur}-#{$spread} {
      0% { box-shadow: 0 0 calc(#{$spread}/2) calc(#{$blur}/2) rgba($glow-color, 0.8); }
      100% { box-shadow: 0 0 #{$spread} #{$blur} rgba($glow-color, 0.5); }
    }
  }
}

/* --------------------------------------------------
   Global Typography
   -------------------------------------------------- */
html {
  font-size: 12px;
}

body {
  font-display: swap;
  font-size: var(--fs-300);
  line-height: var(--fs-500);
  letter-spacing: -0.03rem;
}

/* --------------------------------------------------
   Example Classes Using Variables
   -------------------------------------------------- */
.main-container {
  overflow: hidden; // Disable scrolling by default
  height: calc(var(--vh, 1vh) * 100);
  width: 99.9%;
  display: grid;
  grid-template-columns: auto;
  column-gap: 0.5rem;
  justify-items: center;
  align-items: center;
}

.intro-app-main-container span {
  font-size: var(--fs-300);
  color: var(--clr-neutral-100);
}

.intro-app-main {
  display: grid;
  width: 70%;
  max-width: 950px;
  padding: 6rem 1rem;
  border: 1px solid var(--clr-primary-100);
  height: max-content;

  h1 {
    font-family: var(--font-poppins) !important;
    font-weight: 700;
    text-align: center;
    font-size: var(--fs-600);
    word-spacing: 10px;
    letter-spacing: -2px;
    line-height: var(--fs-600);
    margin-bottom: 2rem;

  }

  p {
    text-align: center;
    font-size: var(--fs-200);
  }


    @media (min-width: map.get($breakpoints, sm)) {
      h1 {
        font-size: var(--fs-700);
        line-height: var(--fs-700);
        letter-spacing: 0px;
      }

      p {
        font-size: var(--fs-300);
      }
    }

    @media (min-width: map.get($breakpoints, md)) {
      h1 {
        font-size: var(--fs-900);
        line-height: var(--fs-800);
        letter-spacing: -5px;
      }

      p {
        font-size: var(--fs-400);
      }
    }

    @media (min-width: map.get($breakpoints, lg)) {
      h1 {
        font-size: var(--fs-1100);
        line-height: var(--fs-900);
        letter-spacing: -5px;
      }
    }
}

.bg-primary {
  background-color: var(--clr-primary-100);
  color: white;
}

.bg-success {
  background-color: var(--clr-success-100);
  color: white;
}

.bg-warning {
  background-color: var(--clr-warning-100);
  color: black;
}

.bg-error {
  background-color: var(--clr-error-100);
  color: white;
}

/* Button Styling */
.btn-primary {
  font-family: var(--font-poppins);
  font-weight: 700;
  font-size: var(--fs-400); // responsive via :root variables
  line-height: calc(var(--fs-600) * 1.2);
  padding: 0.5rem 1.5rem;
  border-radius: 0.5rem;
  border: none;
  cursor: pointer;
  background-color: var(--clr-primary-100);
  color: white;
  transition: all 0.3s ease-in-out;
  box-shadow: 0 4px 12px rgba(0, 73, 255, 0.3);

  &:hover {
    background-color: var(--clr-primary-200);
    box-shadow: 0 6px 16px rgba(0, 73, 255, 0.5);
    transform: translateY(-2px);
  }

  &:active {
    background-color: var(--clr-primary-300);
    box-shadow: 0 3px 8px rgba(0, 73, 255, 0.4);
    transform: translateY(0);
  }

  /* Optional: add glow using your cyberpunk-glow mixin */
  @include cyberpunk-glow($glow-color: var(--clr-primary-100), $blur: 8px, $spread: 4px, $animated: true);
}


.footer-intro-app {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  margin-top: 5rem;
  border-top: 3px solid white;
  height: 100%;
  transform: translateY(2rem);
}

.footer-column {
  display: grid;
  gap: 0.25rem;
  padding: 0.75rem 1rem;
  padding-right: 1.75rem;
  height: 100%;
  border-right: 3px solid white;
  background-color: var(--clr-primary-100);
  line-height: 1.5rem;
  color: var(--clr-neutral-50);
  font-size: var(--fs-400);
  text-align: center;
  align-items: center;

  &:last-child {
    border-right: none;
  }

  svg {
    place-self: end;
  }
}

.image-logo {
  position: absolute;
  top: 0rem;
  right: 0rem;
}

.skeleton {
  background-color: var(--clr-neutral-50);
}

.box-video {
  border: 1px solid var(--clr-primary-100);
}

.box-video-down {
  border-top: 1px solid var(--clr-primary-100);
}
// AvatarControls.scss
.avatar-controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative;
  width: 100%;
  align-items: center;

  .toggle-group {
    border-radius: 0.5rem;
    padding: 0.25rem;
    background-color: var(--clr-primary-500);
    border: 1px solid var(--clr-primary-300);
    
    &.disabled {
      opacity: 0.5;
    }

    .toggle-group-item {
      border-radius: 0.5rem;
      padding: 0.5rem;
      width: 90px;
      text-align: center;
      font-size: var(--fs-200);
      color: var(--clr-neutral-100);
      transition: all 0.3s ease-in-out;
      background-color: transparent;
      border: none;
      cursor: pointer;

      &[data-state='on'] {
        background-color: var(--clr-primary-100);
        color: white;
      }

      &:hover:not([data-state='on']) {
        background-color: var(--clr-primary-400);
      }
    }
  }

  .interrupt-button {
    position: absolute;
    top: -6rem;
    right: 0.75rem;

    button {
      font-size: var(--fs-200);
      padding: 0rem 1rem;
      @extend .btn-primary;
    }
  }
}
.button-send {
  cursor: pointer;
  background-color: var(--clr-primary-100);
}
